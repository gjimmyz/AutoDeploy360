---
# tasks file for install_samba_for_centos7
- name: Include vars
  include_vars: ../vars/samba_var_centos7.yaml

- name: "Create {{ user }}"
  user:
     name: "{{ user }}"
     shell: /bin/bash
     createhome: yes
     home: /home/{{ user }}

- name: Change pass
  user:
     name: "{{ item.name }}"
     password: "{{ item.chpass | password_hash('sha512') }}"
     update_password: always
  with_items:
     - { name: "{{ user }}", chpass: "{{ pass }}" }
  changed_when : false

- name: Install base package
  yum:
    name:
      - samba-client
      - samba
    state: present

- name: Backup smb.conf file
  command: cp /etc/samba/smb.conf /etc/samba/smb.conf.bak
  args:
    creates: /etc/samba/smb.conf.bak
  register: backup_result

- name: Check if smb.conf file needs to be cleared
  stat:
    path: /etc/samba/smb.conf
  register: smb_conf_stat

- name: Clear smb.conf file if not empty
  copy:
    content: ""
    dest: /etc/samba/smb.conf
  when: backup_result.changed and smb_conf_stat.stat.size > 0
  register: clear_smb_conf
  changed_when: clear_smb_conf.changed

- name: Smb.conf file already clear
  debug:
    msg: "smb.conf file is already clear"
  when: not backup_result.changed or (backup_result.changed and smb_conf_stat.stat.size == 0)
  changed_when: false

- name: Check if samba user admin exists
  command: smbpasswd -e "{{ user }}"
  register: samba_user_check
  changed_when: false
  failed_when: samba_user_check.rc != 0 and samba_user_check.rc != 1

- name: Create samba user admin if not exists
  block:
    - name: Create samba user
      shell: "echo -e '{{ samba_user_password }}' | smbpasswd -a '{{ user }}' -s"
      args:
        executable: /bin/bash
      register: create_samba_user
      changed_when: create_samba_user.rc == 0
  when: samba_user_check.rc != 0

- name: Samba user admin already exists
  debug:
    msg: 'Samba user "{{ user }}" already exists'
  when: samba_user_check.rc == 0
  changed_when: false

- name: Write samba config to smb.conf file
  blockinfile:
    path: /etc/samba/smb.conf
    block: |
      [global]
      workgroup = SAMBA
      security = user
      passdb backend = tdbsam
      printing = cups
      printcap name = cups
      load printers = yes
      cups options = raw

      [seq_home]
      valid users = "{{ user }}"
      path = /home/seq
      read only = no
      browseable = yes
      guest ok = no

      #cli test demo
      #smbclient //localhost/admin_home -U username
  register: samba_config_update

- name: Restart samba
  systemd:
    name: smb
    state: restarted
  when:
    - samba_config_update.changed
