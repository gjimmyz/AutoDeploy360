---
- hosts: all
  vars:
    scripts_path: /root/scripts/
    current_date: "{{ lookup('pipe', 'date +%Y/%m/%d') }}"

  tasks:
    - name: Create date directory
      local_action:
        module: file
        path: "{{ scripts_path }}/AutoDeploy360/machine_information/{{ current_date }}"
        state: directory

    - name: Collect only facts returned by facter
      setup:
        gather_subset: '!all,!any'

    - name: Include product names
      include_vars:
        file: product_names.yaml
        name: product_names

    - name: Get product name
      become: yes
      shell: dmidecode | grep "Product Name" | head -n 1
      register: product_name_raw

    - name: Extract product name
      set_fact:
        product_name: "{{ product_name_raw.stdout.split(':')[1].strip() }}"

    - name: Set product name suffix based on product name
      set_fact:
        product_suffix: "{{ product_names.product_names[product_name] | default('no match found') }}"

    - name: Get system serial number
      become: yes
      shell: dmidecode -s system-serial-number
      register: system_serial_raw
      failed_when: false

    - name: Extract system serial number
      set_fact:
        system_serial: "{% if system_serial_raw.stdout.strip() == 'Not Specified' or system_serial_raw.stdout.strip() == 'Default string' %}unknown{% else %}{{ system_serial_raw.stdout.strip() }}{% endif %}"

    - name: Get machine id
      become: yes
      shell:  cat /etc/machine-id
      register: machine_id
      failed_when: false

    - name: Check if product_suffix is valid
      set_fact:
        proceed_with_tasks: "{{ product_suffix != 'no match found' }}"

    - name: Copy system_info_var.yaml to remote
      copy:
        src: "{{ scripts_path }}/AutoDeploy360/based_on_role_yaml/system_info/vars/system_info_var.yaml"
        dest: /tmp/system_info_var.yaml
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7" and proceed_with_tasks)
    
    - name: Copy check_all.py script to remote
      copy:
        src: "{{ scripts_path }}/AutoDeploy360/based_on_role_yaml/main_exe/check_all/check_all.py"
        dest: /tmp/check_all.py
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7" and proceed_with_tasks)

    - name: Run check_all.py script on centos7
      shell: "python3 /tmp/check_all.py > /tmp/check_all_output.txt"
      register: script_output
      ignore_errors: true
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7" and proceed_with_tasks)

    - name: Read the first 5 lines of the output file
      become: yes
      shell: "head -n 5 /tmp/check_all_output.txt"
      register: first_five_lines
      ignore_errors: true
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7" and proceed_with_tasks)

    - name: Show first 5 lines of script output
      debug:
        msg: "{{ first_five_lines.stdout_lines }}"
      when: first_five_lines.stdout_lines is defined

    - name: Fetch the output to local machine
      fetch:
        src: /tmp/check_all_output.txt
        dest: "{{ scripts_path }}/AutoDeploy360/machine_information/{{ current_date }}/centos7_{{ system_serial }}_{{ product_suffix }}_{{ machine_id.stdout }}"
        flat: yes
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7" and proceed_with_tasks)

    - name: Remove temporary files from remote
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /tmp/check_all.py
        - /tmp/check_all_output.txt
        - /tmp/system_info_var.yaml
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7" and proceed_with_tasks)

    - name: Copy var_for_US2004.yaml to remote
      copy:
        src: "{{ scripts_path }}/AutoDeploy360/based_on_role_yaml/system_info/vars/var_for_US2004.yaml"
        dest: /tmp/var_for_US2004.yaml
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['lsb']['release'] == '20.04' and proceed_with_tasks

    - name: Copy check_all.py script to remote
      copy:
        src: "{{ scripts_path }}/AutoDeploy360/based_on_role_yaml/main_exe/check_all/check_all.py"
        dest: /tmp/check_all.py
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['lsb']['release'] == '20.04' and proceed_with_tasks

    - name: Run check_all.py script on Ubuntu 20
      shell: "python3 /tmp/check_all.py > /tmp/check_all_output.txt"
      register: script_output
      ignore_errors: true
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['lsb']['release'] == '20.04' and proceed_with_tasks

    - name: Read the first 5 lines of the output file
      become: yes
      shell: "head -n 5 /tmp/check_all_output.txt"
      register: first_five_lines
      ignore_errors: true
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['lsb']['release'] == '20.04' and proceed_with_tasks

    - name: Show first 5 lines of script output
      debug:
        msg: "{{ first_five_lines.stdout_lines }}"
      when: first_five_lines.stdout_lines is defined

    - name: Fetch the output to local machine
      fetch:
        src: /tmp/check_all_output.txt
        dest: "{{ scripts_path }}/AutoDeploy360/machine_information/{{ current_date }}/ubuntu20_{{ system_serial }}_{{ product_suffix }}_{{ machine_id.stdout }}"
        flat: yes
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['lsb']['release'] == '20.04' and proceed_with_tasks

    - name: Remove temporary files from remote
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /tmp/check_all.py
        - /tmp/check_all_output.txt
        - /tmp/var_for_US2004.yaml
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['lsb']['release'] == '20.04' and proceed_with_tasks
