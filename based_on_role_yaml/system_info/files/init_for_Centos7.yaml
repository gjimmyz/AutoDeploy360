- name: "Centos7 Include vars"
  include_vars: ../vars/system_info_var.yaml

- name: "Centos7 disable selinux"
  selinux: state=disabled

- name: "Centos7 disable firewalld"
  service: name=firewalld state=stopped enabled=no

- name: Set Shanghai timezone
  timezone:
    name: Asia/Shanghai

- name: "Centos7 Configure sudoers file for user user"
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ ssh_user }}'
    line: '{{ ssh_user }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'

- name: "Centos7 mod sshd_config"
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      UseDNS no
  register: sshd_config_update

- name: "Centos7 restart sshd"
  systemd:
    state: restarted
    daemon_reload: yes
    name: sshd
  when:
    - sshd_config_update.changed

- name: "Centos7 Set vm.swappiness to 0 using sysctl"
  ansible.builtin.sysctl:
    name: vm.swappiness
    value: '0'
    state: present
    sysctl_set: yes
    reload: yes

- name: "Centos7 Ensure vm.swappiness is set in sysctl.conf"
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    regexp: '^vm.swappiness[[:space:]]?='
    line: 'vm.swappiness = 0'

- name: "Centos7 Check if lock file exists for yum clean metadata"
  stat:
    path: /var/cache/yum/.yum-clean-metadata-lock
  register: yum_clean_metadata_lock_file_stat

- name: "Centos7 Cleanup Cache"
  command: yum clean metadata
  args:
    warn: no
  when: not yum_clean_metadata_lock_file_stat.stat.exists or (ansible_date_time.epoch | int - yum_clean_metadata_lock_file_stat.stat.mtime | int > 3600)

- name: "Centos7 Create lock file for yum clean metadata"
  file:
    path: /var/cache/yum/.yum-clean-metadata-lock
    state: touch
  when: not yum_clean_metadata_lock_file_stat.stat.exists or (ansible_date_time.epoch | int - yum_clean_metadata_lock_file_stat.stat.mtime | int > 3600)

- name: "Centos7 blocks the default source"
  yum:
    name: yum-utils
    disablerepo: "base,extras,updates"

- name: "Centos7 Check if lock file exists for disable old base extras updates repo"
  stat:
    path: /var/cache/yum/.yum-disable-metadata-lock
  register: yum_disable_metadata_lock_file_stat

- name: "Centos7 disable old base extras updates repo"
  command: yum-config-manager --disable base extras updates
  when: not yum_disable_metadata_lock_file_stat.stat.exists or (ansible_date_time.epoch | int - yum_disable_metadata_lock_file_stat.stat.mtime | int > 3600)

- name: "Centos7 Create lock file for disable old base extras updates repo"
  file:
    path: /var/cache/yum/.yum-disable-metadata-lock
    state: touch
  when: not yum_disable_metadata_lock_file_stat.stat.exists or (ansible_date_time.epoch | int - yum_disable_metadata_lock_file_stat.stat.mtime | int > 3600)

- name: "Centos7 Check if lock file exists for check-internet"
  stat:
    path: /var/cache/yum/.yum-check-internet-metadata-lock
  register: yum_check_internet_metadata_lock_file_stat

- name: "Centos7 Check if internet is available"
  command: "ping -c 1 {{ internet_check_ip }}"
  register: internet_access
  ignore_errors: true
  when: not yum_check_internet_metadata_lock_file_stat.stat.exists or (ansible_date_time.epoch | int - yum_check_internet_metadata_lock_file_stat.stat.mtime | int > 3600)

- set_fact:
    is_internet_available: "{{ internet_access.rc == 0 }}"
  when: internet_access is defined and 'rc' in internet_access

- name: "Centos7 Load outernet repo vars"
  include_vars: ../vars/vars_repo_out.yaml
  when: is_internet_available is defined and is_internet_available

- name: "Centos7 Load internal repo vars"
  include_vars: ../vars/vars_repo_in.yaml
  when: is_internet_available is defined and not is_internet_available

- name: "Centos7 creates and updates new repo files"
  template:
    src: "baseepel_all.j2"
    dest: "/etc/yum.repos.d/baseepel.repo"
    owner: root
    group: root
    mode: '0644'
  when: is_internet_available is defined

- name: "Centos7 Create lock file for check-internet"
  file:
    path: /var/cache/yum/.yum-check-internet-metadata-lock
    state: touch
  when: is_internet_available is defined

- block:
    - name: "Centos7 Set up cron job for time synchronization for internet hosts"
      cron:
        name: "Sync time every hour"
        minute: "0"
        hour: "*"
        user: root
        job: "/usr/sbin/ntpdate stdtime.gov.hk > /dev/null 2>&1"
  when: is_internet_available is defined and is_internet_available

- block:
    - name: "Centos7 Delete server lines in ntp.conf"
      lineinfile:
        dest: /etc/ntp.conf
        regex: '^server [0-4].centos.pool.ntp.org iburst'
        state: absent
        backup: yes
        backrefs: yes

    - name: "Centos7 Add internal ntp servers"
      blockinfile:
        path: /etc/ntp.conf
        block: |
          server {{ ntp_server_1 }} iburst
          server {{ ntp_server_2 }} iburst
        register: ntp_config_update

    - name: "Centos7 Restart ntpd service"
      systemd:
        state: restarted
        daemon_reload: yes
        name: ntpd
        enabled: yes
      when:
        - ntp_config_update.changed
  when: is_internet_available is defined and not is_internet_available

- name: "Centos7 Check if lock file exists for yum makecache metadata"
  stat:
    path: /var/cache/yum/.yum-makecache-metadata-lock
  register: yum_makecache_metadata_lock_file_stat

- name: "Centos7 flush repo"
  command: yum makecache
  args:
    warn: no
  when: not yum_makecache_metadata_lock_file_stat.stat.exists or (ansible_date_time.epoch | int - yum_makecache_metadata_lock_file_stat.stat.mtime | int > 3600)

- name: "Centos7 Create lock file for yum makecache metadata"
  file:
    path: /var/cache/yum/.yum-makecache-metadata-lock
    state: touch
  when: not yum_makecache_metadata_lock_file_stat.stat.exists or (ansible_date_time.epoch | int - yum_makecache_metadata_lock_file_stat.stat.mtime | int > 3600)

- name: "Centos7 Install base software"
  yum:
    name:
      - iftop
      - zip
      - python2-pip
      - lrzsz
      - wget
      - gcc
      - gcc-c++
      - autoconf
      - automake
      - make
      - iotop
      - atop
      - vim
      - net-tools
      - samba
      - samba-client
      - ntp
      - ntpdate
      - nfs-utils
      - python3
      - python3-pip
      - tuned
    state: present

- name: "Centos7 Get current tuned profile"
  shell: "tuned-adm active | awk -F': ' '{print $2}'"
  register: current_tuned_profile
  changed_when: False

- name: "Centos7 Activate network-throughput profile"
  command: tuned-adm profile network-latency
  when: current_tuned_profile.stdout != "network-latency"

- name: "Centos7 Check if network configuration has been applied"
  stat:
    path: /var/lib/network_config_applied
  register: network_config_applied

- name: "Centos7 Gather networking facts"
  setup:
    gather_subset: network
  when: not network_config_applied.stat.exists

- name: "Centos7 Reset connection"
  meta: reset_connection
  when: not network_config_applied.stat.exists

- name: "Centos7 Configure static IP"
  template:
    src: ifcfg-template.j2
    dest: "/etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}"
  when: not network_config_applied.stat.exists

- name: "Centos7 Restart network"
  command: systemctl restart network
  when: not network_config_applied.stat.exists

- name: "Centos7 Create a flag file after network configuration"
  file:
    path: /var/lib/network_config_applied
    state: touch
  when: not network_config_applied.stat.exists

- name: "Centos7 Check if lock file exists"
  stat:
    path: /var/lib/reboot.lock
  register: lock_file_stat

- name: "Centos7 Create lock file"
  file:
    path: /var/lib/reboot.lock
    state: touch
  when:
    - not lock_file_stat.stat.exists
    - (ansible_facts['uptime_seconds'] | int) <= 86400

- name: "Centos7 Restart machine if CentOS7 and no lock file exists and uptime < 1 day"
  command: /sbin/reboot
  async: 0
  poll: 0
  failed_when: false
  ignore_errors: true
  ignore_unreachable: true
  when:
    - not lock_file_stat.stat.exists
    - (ansible_facts['uptime_seconds'] | int) <= 86400
